version: '3.8'

services:
  atlas:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ATLAS_VECTOR_DB_URL=milvus
      - ATLAS_VECTOR_DB_PORT=19530
      - ATLAS_WORKFLOW_ENGINE_URL=temporal:7233
    depends_on:
      - milvus
      - temporal
    volumes:
      - ./src:/app/src
    networks:
      - atlas_network

  milvus:
    image: milvusdb/milvus:v2.2.0
    ports:
      - "19530:19530"
      - "19121:19121"
    environment:
      - ETCD_HOST=etcd
      - ETCD_PORT=2379
      - MINIO_ADDRESS=minio:9000
    depends_on:
      - etcd
      - minio
    networks:
      - atlas_network

  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - atlas_network

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - minio_data:/data
    command: minio server /data --console-address ":9001"
    networks:
      - atlas_network

  temporal:
    image: temporalio/auto-setup:1.20.0
    ports:
      - "7233:7233"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
    depends_on:
      - postgresql
    networks:
      - atlas_network

  postgresql:
    image: postgres:13
    environment:
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
      - POSTGRES_DB=temporal
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - atlas_network

  prometheus:
    image: prom/prometheus:v2.40.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - atlas_network

  grafana:
    image: grafana/grafana:9.2.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - atlas_network

volumes:
  etcd_data:
  minio_data:
  postgresql_data:
  prometheus_data:
  grafana_data:

networks:
  atlas_network:
    driver: bridge